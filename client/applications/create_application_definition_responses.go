// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubermatic/go-kubermatic/models"
)

// CreateApplicationDefinitionReader is a Reader for the CreateApplicationDefinition structure.
type CreateApplicationDefinitionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateApplicationDefinitionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateApplicationDefinitionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateApplicationDefinitionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateApplicationDefinitionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateApplicationDefinitionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateApplicationDefinitionCreated creates a CreateApplicationDefinitionCreated with default headers values
func NewCreateApplicationDefinitionCreated() *CreateApplicationDefinitionCreated {
	return &CreateApplicationDefinitionCreated{}
}

/*
CreateApplicationDefinitionCreated describes a response with status code 201, with default header values.

ApplicationDefinition
*/
type CreateApplicationDefinitionCreated struct {
	Payload *models.ApplicationDefinition
}

// IsSuccess returns true when this create application definition created response has a 2xx status code
func (o *CreateApplicationDefinitionCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create application definition created response has a 3xx status code
func (o *CreateApplicationDefinitionCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create application definition created response has a 4xx status code
func (o *CreateApplicationDefinitionCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create application definition created response has a 5xx status code
func (o *CreateApplicationDefinitionCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create application definition created response a status code equal to that given
func (o *CreateApplicationDefinitionCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateApplicationDefinitionCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionCreated  %+v", 201, o.Payload)
}

func (o *CreateApplicationDefinitionCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionCreated  %+v", 201, o.Payload)
}

func (o *CreateApplicationDefinitionCreated) GetPayload() *models.ApplicationDefinition {
	return o.Payload
}

func (o *CreateApplicationDefinitionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateApplicationDefinitionUnauthorized creates a CreateApplicationDefinitionUnauthorized with default headers values
func NewCreateApplicationDefinitionUnauthorized() *CreateApplicationDefinitionUnauthorized {
	return &CreateApplicationDefinitionUnauthorized{}
}

/*
CreateApplicationDefinitionUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type CreateApplicationDefinitionUnauthorized struct {
}

// IsSuccess returns true when this create application definition unauthorized response has a 2xx status code
func (o *CreateApplicationDefinitionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create application definition unauthorized response has a 3xx status code
func (o *CreateApplicationDefinitionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create application definition unauthorized response has a 4xx status code
func (o *CreateApplicationDefinitionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create application definition unauthorized response has a 5xx status code
func (o *CreateApplicationDefinitionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create application definition unauthorized response a status code equal to that given
func (o *CreateApplicationDefinitionUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateApplicationDefinitionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionUnauthorized ", 401)
}

func (o *CreateApplicationDefinitionUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionUnauthorized ", 401)
}

func (o *CreateApplicationDefinitionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateApplicationDefinitionForbidden creates a CreateApplicationDefinitionForbidden with default headers values
func NewCreateApplicationDefinitionForbidden() *CreateApplicationDefinitionForbidden {
	return &CreateApplicationDefinitionForbidden{}
}

/*
CreateApplicationDefinitionForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type CreateApplicationDefinitionForbidden struct {
}

// IsSuccess returns true when this create application definition forbidden response has a 2xx status code
func (o *CreateApplicationDefinitionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create application definition forbidden response has a 3xx status code
func (o *CreateApplicationDefinitionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create application definition forbidden response has a 4xx status code
func (o *CreateApplicationDefinitionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create application definition forbidden response has a 5xx status code
func (o *CreateApplicationDefinitionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create application definition forbidden response a status code equal to that given
func (o *CreateApplicationDefinitionForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateApplicationDefinitionForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionForbidden ", 403)
}

func (o *CreateApplicationDefinitionForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinitionForbidden ", 403)
}

func (o *CreateApplicationDefinitionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateApplicationDefinitionDefault creates a CreateApplicationDefinitionDefault with default headers values
func NewCreateApplicationDefinitionDefault(code int) *CreateApplicationDefinitionDefault {
	return &CreateApplicationDefinitionDefault{
		_statusCode: code,
	}
}

/*
CreateApplicationDefinitionDefault describes a response with status code -1, with default header values.

errorResponse
*/
type CreateApplicationDefinitionDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the create application definition default response
func (o *CreateApplicationDefinitionDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create application definition default response has a 2xx status code
func (o *CreateApplicationDefinitionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create application definition default response has a 3xx status code
func (o *CreateApplicationDefinitionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create application definition default response has a 4xx status code
func (o *CreateApplicationDefinitionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create application definition default response has a 5xx status code
func (o *CreateApplicationDefinitionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create application definition default response a status code equal to that given
func (o *CreateApplicationDefinitionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateApplicationDefinitionDefault) Error() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinition default  %+v", o._statusCode, o.Payload)
}

func (o *CreateApplicationDefinitionDefault) String() string {
	return fmt.Sprintf("[POST /api/v2/applicationdefinitions][%d] createApplicationDefinition default  %+v", o._statusCode, o.Payload)
}

func (o *CreateApplicationDefinitionDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateApplicationDefinitionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
