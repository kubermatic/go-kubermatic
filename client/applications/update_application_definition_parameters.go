// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kubermatic/go-kubermatic/models"
)

// NewUpdateApplicationDefinitionParams creates a new UpdateApplicationDefinitionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateApplicationDefinitionParams() *UpdateApplicationDefinitionParams {
	return &UpdateApplicationDefinitionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateApplicationDefinitionParamsWithTimeout creates a new UpdateApplicationDefinitionParams object
// with the ability to set a timeout on a request.
func NewUpdateApplicationDefinitionParamsWithTimeout(timeout time.Duration) *UpdateApplicationDefinitionParams {
	return &UpdateApplicationDefinitionParams{
		timeout: timeout,
	}
}

// NewUpdateApplicationDefinitionParamsWithContext creates a new UpdateApplicationDefinitionParams object
// with the ability to set a context for a request.
func NewUpdateApplicationDefinitionParamsWithContext(ctx context.Context) *UpdateApplicationDefinitionParams {
	return &UpdateApplicationDefinitionParams{
		Context: ctx,
	}
}

// NewUpdateApplicationDefinitionParamsWithHTTPClient creates a new UpdateApplicationDefinitionParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateApplicationDefinitionParamsWithHTTPClient(client *http.Client) *UpdateApplicationDefinitionParams {
	return &UpdateApplicationDefinitionParams{
		HTTPClient: client,
	}
}

/*
UpdateApplicationDefinitionParams contains all the parameters to send to the API endpoint

	for the update application definition operation.

	Typically these are written to a http.Request.
*/
type UpdateApplicationDefinitionParams struct {

	// Body.
	Body *models.ApplicationDefinitionBody

	// AppdefName.
	AppDefName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update application definition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateApplicationDefinitionParams) WithDefaults() *UpdateApplicationDefinitionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update application definition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateApplicationDefinitionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update application definition params
func (o *UpdateApplicationDefinitionParams) WithTimeout(timeout time.Duration) *UpdateApplicationDefinitionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update application definition params
func (o *UpdateApplicationDefinitionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update application definition params
func (o *UpdateApplicationDefinitionParams) WithContext(ctx context.Context) *UpdateApplicationDefinitionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update application definition params
func (o *UpdateApplicationDefinitionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update application definition params
func (o *UpdateApplicationDefinitionParams) WithHTTPClient(client *http.Client) *UpdateApplicationDefinitionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update application definition params
func (o *UpdateApplicationDefinitionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update application definition params
func (o *UpdateApplicationDefinitionParams) WithBody(body *models.ApplicationDefinitionBody) *UpdateApplicationDefinitionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update application definition params
func (o *UpdateApplicationDefinitionParams) SetBody(body *models.ApplicationDefinitionBody) {
	o.Body = body
}

// WithAppDefName adds the appdefName to the update application definition params
func (o *UpdateApplicationDefinitionParams) WithAppDefName(appdefName string) *UpdateApplicationDefinitionParams {
	o.SetAppDefName(appdefName)
	return o
}

// SetAppDefName adds the appdefName to the update application definition params
func (o *UpdateApplicationDefinitionParams) SetAppDefName(appdefName string) {
	o.AppDefName = appdefName
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateApplicationDefinitionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param appdef_name
	if err := r.SetPathParam("appdef_name", o.AppDefName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
