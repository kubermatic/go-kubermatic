// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kubermatic/go-kubermatic/models"
)

// ListVSphereVMGroupsNoCredentialsReader is a Reader for the ListVSphereVMGroupsNoCredentials structure.
type ListVSphereVMGroupsNoCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVSphereVMGroupsNoCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListVSphereVMGroupsNoCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListVSphereVMGroupsNoCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVSphereVMGroupsNoCredentialsOK creates a ListVSphereVMGroupsNoCredentialsOK with default headers values
func NewListVSphereVMGroupsNoCredentialsOK() *ListVSphereVMGroupsNoCredentialsOK {
	return &ListVSphereVMGroupsNoCredentialsOK{}
}

/*
ListVSphereVMGroupsNoCredentialsOK describes a response with status code 200, with default header values.

VSphereVMGroup
*/
type ListVSphereVMGroupsNoCredentialsOK struct {
	Payload []*models.VSphereVMGroup
}

// IsSuccess returns true when this list v sphere Vm groups no credentials o k response has a 2xx status code
func (o *ListVSphereVMGroupsNoCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list v sphere Vm groups no credentials o k response has a 3xx status code
func (o *ListVSphereVMGroupsNoCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list v sphere Vm groups no credentials o k response has a 4xx status code
func (o *ListVSphereVMGroupsNoCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list v sphere Vm groups no credentials o k response has a 5xx status code
func (o *ListVSphereVMGroupsNoCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list v sphere Vm groups no credentials o k response a status code equal to that given
func (o *ListVSphereVMGroupsNoCredentialsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListVSphereVMGroupsNoCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/vsphere/vmgroups][%d] listVSphereVmGroupsNoCredentialsOK  %+v", 200, o.Payload)
}

func (o *ListVSphereVMGroupsNoCredentialsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/vsphere/vmgroups][%d] listVSphereVmGroupsNoCredentialsOK  %+v", 200, o.Payload)
}

func (o *ListVSphereVMGroupsNoCredentialsOK) GetPayload() []*models.VSphereVMGroup {
	return o.Payload
}

func (o *ListVSphereVMGroupsNoCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVSphereVMGroupsNoCredentialsDefault creates a ListVSphereVMGroupsNoCredentialsDefault with default headers values
func NewListVSphereVMGroupsNoCredentialsDefault(code int) *ListVSphereVMGroupsNoCredentialsDefault {
	return &ListVSphereVMGroupsNoCredentialsDefault{
		_statusCode: code,
	}
}

/*
ListVSphereVMGroupsNoCredentialsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListVSphereVMGroupsNoCredentialsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list v sphere VM groups no credentials default response
func (o *ListVSphereVMGroupsNoCredentialsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list v sphere VM groups no credentials default response has a 2xx status code
func (o *ListVSphereVMGroupsNoCredentialsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list v sphere VM groups no credentials default response has a 3xx status code
func (o *ListVSphereVMGroupsNoCredentialsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list v sphere VM groups no credentials default response has a 4xx status code
func (o *ListVSphereVMGroupsNoCredentialsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list v sphere VM groups no credentials default response has a 5xx status code
func (o *ListVSphereVMGroupsNoCredentialsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list v sphere VM groups no credentials default response a status code equal to that given
func (o *ListVSphereVMGroupsNoCredentialsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListVSphereVMGroupsNoCredentialsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/vsphere/vmgroups][%d] listVSphereVMGroupsNoCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *ListVSphereVMGroupsNoCredentialsDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/vsphere/vmgroups][%d] listVSphereVMGroupsNoCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *ListVSphereVMGroupsNoCredentialsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListVSphereVMGroupsNoCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
